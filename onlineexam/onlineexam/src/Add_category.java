
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lab-3_8
 */
public class Add_category extends javax.swing.JFrame {

   
    public Add_category() {
        
        initComponents();
        setVisible(true);
        setResizable(false);
        setSize(800,600);
            BufferedImage img;
        try {
            img = ImageIO.read(new File("src/pictures/adm.png"));
            BufferedImage newimg = resize(img ,back.getWidth(),back.getHeight());
            back.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        tfphotopath = new javax.swing.JTextField();
        lbphoto = new javax.swing.JLabel();
        browse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        category = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        back = new javax.swing.JLabel();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        lb.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lb.setForeground(new java.awt.Color(255, 255, 255));
        lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb.setText("Add Category");
        getContentPane().add(lb);
        lb.setBounds(400, 0, 400, 50);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Category Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(420, 80, 170, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Description");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(420, 160, 130, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Photo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(420, 330, 80, 30);

        add.setBackground(new java.awt.Color(255, 153, 0));
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(560, 520, 100, 30);
        getContentPane().add(tfphotopath);
        tfphotopath.setBounds(420, 480, 240, 30);

        lbphoto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        getContentPane().add(lbphoto);
        lbphoto.setBounds(420, 360, 150, 110);

        browse.setBackground(new java.awt.Color(255, 153, 0));
        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        getContentPane().add(browse);
        browse.setBounds(590, 400, 100, 30);

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(420, 190, 320, 130);

        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        getContentPane().add(category);
        category.setBounds(420, 110, 320, 30);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/im.png"))); // NOI18N
        jPanel1.add(photo);
        photo.setBounds(-60, 90, 450, 330);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 400, 600);
        getContentPane().add(back);
        back.setBounds(-6, 0, 810, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
      JFileChooser jfc = new JFileChooser("C:\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpeg", "jpg", "bmp", "png");
        jfc.setFileFilter(filter);
        jfc.setAcceptAllFileFilterUsed(false);
        int showDialog = jfc.showDialog(this, "Open");
        if (showDialog == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            tfphotopath.setText(f.getPath());
            BufferedImage bi;
            try {
                bi = ImageIO.read(f);

                BufferedImage newimage = resize(bi, 200, 200);
                ImageIcon ic = new ImageIcon(newimage);
                lbphoto.setIcon(ic);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
       
    }//GEN-LAST:event_browseActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try
        {
        String catname = category.getText();
        String Description = description.getText();
        String photo = tfphotopath.getText();
        if(catname.isEmpty() || Description.isEmpty() || photo.isEmpty())
        {
             JOptionPane.showMessageDialog(this, "All fields are mandatory");
        }
            else
             {
                   
               try {
                  HttpResponse<String> res = Unirest.post("http://localhost:8888/addcategory")
                           .queryString("catname",catname)
                           .queryString("Description",Description)
                            .field("photo",new File(photo)).asString();
                  String response = res.getBody();
                  if (response.equals("success")) 
                {
                    JOptionPane.showMessageDialog(this, "Category add successfully!!");
                } else 
                {
                    JOptionPane.showMessageDialog(this, "Invalid!!!!");
                }
               }
               catch (UnirestException ex) {
                 Logger.getLogger(Add_category.class.getName()).log(Level.SEVERE, null, ex);
               }
             }
  
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_addActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed
BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel back;
    private javax.swing.JButton browse;
    private javax.swing.JTextField category;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lbphoto;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField tfphotopath;
    // End of variables declaration//GEN-END:variables

    
}

