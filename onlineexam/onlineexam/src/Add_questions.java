
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class Add_questions extends javax.swing.JFrame {
       void loadcatname()
    {
        try
        {
             HttpResponse<String> res = Unirest.get("http://localhost:8888/Getcategory").asString();
             String data = res.getBody().trim();
             StringTokenizer st = new StringTokenizer(data,"~");
             while(st.hasMoreTokens())
             {
                 String Name = st.nextToken();
                 category.addItem(Name);

              
             }
             
         
        }
             catch (Exception ex)
                     {
                     ex.printStackTrace();
                     }
                
    }


    /**
     * Creates new form Add_questions
     */
    public Add_questions() {
        initComponents();
        loadcatname();
        setSize(800,600);
        setVisible(true);
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            BufferedImage img;
        try {
            img = ImageIO.read(new File("src/pictures/adm.png"));
            BufferedImage newimg = resize(img ,jLabel9.getWidth(),jLabel9.getHeight());
            jLabel9.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        optionD = new javax.swing.JTextField();
        optionA = new javax.swing.JTextField();
        optionB = new javax.swing.JTextField();
        optionC = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        correctanswer = new javax.swing.JComboBox<String>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<String>();
        jPanel1 = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Correct Answer");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(420, 460, 160, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Category");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(420, 70, 100, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Option A");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(420, 210, 100, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Option B");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(420, 270, 100, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Option C");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(420, 330, 100, 30);

        question.setColumns(20);
        question.setRows(5);
        jScrollPane1.setViewportView(question);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(420, 160, 340, 50);
        getContentPane().add(optionD);
        optionD.setBounds(420, 420, 340, 30);
        getContentPane().add(optionA);
        optionA.setBounds(420, 240, 340, 30);
        getContentPane().add(optionB);
        optionB.setBounds(420, 300, 340, 30);
        getContentPane().add(optionC);
        optionC.setBounds(420, 360, 340, 30);

        add.setBackground(new java.awt.Color(255, 153, 0));
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(540, 530, 90, 30);

        correctanswer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OptionA", "OptionB", "OptionC", "OptionD" }));
        correctanswer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                correctanswerItemStateChanged(evt);
            }
        });
        correctanswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctanswerActionPerformed(evt);
            }
        });
        getContentPane().add(correctanswer);
        correctanswer.setBounds(420, 490, 340, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Option D");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(420, 390, 100, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Question");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(420, 130, 100, 30);

        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        getContentPane().add(category);
        category.setBounds(420, 100, 340, 30);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/im.png"))); // NOI18N
        jPanel1.add(photo);
        photo.setBounds(-60, 90, 450, 330);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 400, 600);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Question");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(400, 0, 400, 60);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(-6, 0, 810, 610);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
     String Category =  (String) category.getSelectedItem();
      String Question =  question.getText();
      String OptionA = optionA.getText();
      String OptionB = optionB.getText();
      String OptionC = optionC.getText();
      String OptionD = optionD.getText();
      String Correctanswer = (String) correctanswer.getSelectedItem();
      try
      {
      if(Question.isEmpty() || OptionA.isEmpty() || OptionB.isEmpty() || OptionC.isEmpty() || OptionD.isEmpty() )
        {
             JOptionPane.showMessageDialog(this, "All fields are mandatory");
        }
            else
             {
                   
               try {
                  HttpResponse<String> res = Unirest.get("http://localhost:8888/addquestion")
                           .queryString("Question",Question)
                           .queryString("OptionA",OptionA)
                            .queryString("OptionB",OptionB)
                            .queryString("OptionC",OptionC)
                              .queryString("OptionD",OptionD)
                          .queryString("Correctanswer",Correctanswer)
                          .queryString("Category",Category).asString();
                  String response = res.getBody();
                  if (response.equals("success")) 
                {
                    JOptionPane.showMessageDialog(this, "Question add successfully!!");
                } else 
                {
                    JOptionPane.showMessageDialog(this, "Invalid!!!!");
                }
               }
               catch (UnirestException ex) {
                 Logger.getLogger(Add_category.class.getName()).log(Level.SEVERE, null, ex);
               }
             }
  
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
      
    }//GEN-LAST:event_addActionPerformed

    private void correctanswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctanswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_correctanswerActionPerformed

    private void correctanswerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_correctanswerItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_correctanswerItemStateChanged

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_questions().setVisible(true);
            }
        });
     
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JComboBox<String> correctanswer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField optionA;
    private javax.swing.JTextField optionB;
    private javax.swing.JTextField optionC;
    private javax.swing.JTextField optionD;
    private javax.swing.JLabel photo;
    private javax.swing.JTextArea question;
    // End of variables declaration//GEN-END:variables
}


